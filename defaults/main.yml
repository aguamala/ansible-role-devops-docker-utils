---
# defaults file for ansible-role-devops-docker-utils

#main
#devops_docker_utils_user: centos
#devops_docker_utils_compose_dir: devops_docker_utils

devops_docker_utils_docker_network: docker1
devops_docker_utils_docker_network_subnet: 172.18.0.0/16

#consul
devops_docker_utils_consul_server_mode: False
devops_docker_utils_consul_bootstrap: False
devops_docker_utils_consul_args: "-node '{{ hostname_replaced }}' -dc 'virginia' -join '172.20.0.171' -log-level 'INFO'"

#registrator
devops_docker_utils_registrator_command: "-ip {{ ansible_default_ipv4.address }} consul://consul:8500"

#service-discovery
devops_docker_utils_service_discovery:
  haproxy:
    maxconn: 4000
    user: haproxy
    group: haproxy
    defaults:
      mode: tcp
      log: global
      extras:
        - option dontlognull
        - option redispatch
      retries: 3
      timeout_http_request: 300s
      timeout_queue: 1m
      timeout_connect: 500s
      timeout_client: 5000s
      timeout_server: 1h
      timeout_http_keep_alive: 55s
      timeout_check: 10s
      maxconn: 10000

  consul_template:
    templates:
    #  - name: haproxy_frontend_backend
    #    dest: "haproxy_frontend_backend_nginx"
    #    conf_name: haproxy_frontend_backend
    #    conf_dest: haproxy_frontend_backend_nginx
    #    service: "nginx"
    #    bind: "0.0.0.0:8181"
    #    mode: "tcp"
    #    log: "global"
    #    balance: leastconn
    #    port: 8181
    #    command: "service-discovery-restart-haproxy"


devops_docker_utils:
  user: "{{ devops_docker_utils_user | default('centos') }}"
  compose_dir: "/home/{{ devops_docker_utils_user | default('centos') }}/{{ devops_docker_utils_compose_dir | default('devops_docker_utils') }}"
  pull: False

  consul:
    tag: "{{ devops_docker_utils_consul_tag | default('latest') }}"
    restart: "{{ devops_docker_utils_consul_restart | default('always') }}"

  registrator:
    tag: latest
    command: "{{ devops_docker_utils_registrator_command | default('consul://localhost:8500') }}"
    restart: always
    net: host

  logspout:
    tag: master
    ports: "8000:80"
    restart: always
    command: "{{ devops_docker_utils_logspout_command | default('syslog://') }}"

  service_discovery:
    tag: latest
    restart: always


docker_engine_install:
  #install docker from docker repo
  repos_install:
      docker: True
  pkg_mgr:
    install:
      - name: docker-engine
        repo: dockerrepo

  started: True
  enabled: True
  sysconfig:
    options: --selinux-enabled
    docker_cert_path: /etc/docker
    #OPTIONAL
    #add_registry:
    #block_registry
    #insecure_registry
    #docker_tmpdir
    #logrotate
    #docker_network_options
