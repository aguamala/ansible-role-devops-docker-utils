---
# defaults file for ansible-role-devops-docker-utils

#main
#devops_docker_utils_user: centos
#devops_docker_utils_compose_dir: devops_docker_utils

#devops_docker_utils_docker_network: devops
devops_docker_utils_docker_network_subnet: 172.19.0.0/16

#consul
#devops_docker_utils_consul_disable: yes
devops_docker_utils_consul_server_mode: False
devops_docker_utils_consul_bootstrap: False
devops_docker_utils_consul_args: "-advertise {{ ansible_default_ipv4.address }} -node '{{ hostname_replaced }}' -datacenter 'virginia' -retry-join '172.20.0.171' -log-level 'info' -data-dir /consul/data"

#logspout
#devops_docker_utils_logspout_disable: yes

#registrator
#devops_docker_utils_registrator_disable: yes
devops_docker_utils_registrator_command: "-ip {{ ansible_default_ipv4.address }} consul://consul:8500"

#service-discovery
#devops_docker_utils_service_discovery_disable: yes
devops_docker_utils_service_discovery:
  haproxy:
    maxconn: 4000
    user: haproxy
    group: haproxy
    defaults:
      mode: tcp
      log: global
      extras:
        - option dontlognull
        - option redispatch
      retries: 3
      timeout_http_request: 300s
      timeout_queue: 1m
      timeout_connect: 500s
      timeout_client: 5000s
      timeout_server: 1h
      timeout_http_keep_alive: 55s
      timeout_check: 10s
      maxconn: 10000

  consul_template:
    templates:
    #  - name: haproxy_frontend_backend
    #    dest: "haproxy_frontend_backend_nginx"
    #    conf_name: haproxy_frontend_backend
    #    conf_dest: haproxy_frontend_backend_nginx
    #    service: "nginx"
    #    bind: "0.0.0.0:8181"
    #    mode: "tcp"
    #    log: "global"
    #    balance: leastconn
    #    port: 8181
    #    command: "service-discovery-restart-haproxy"


#devops_docker_utils_restart: yes
#devops_docker_utils_stop_remove: yes

devops_docker_utils:
  user: "{{ devops_docker_utils_user | default('centos') }}"
  compose_dir: "/home/{{ devops_docker_utils_user | default('centos') }}/{{ devops_docker_utils_compose_dir | default('devops-docker-utils') }}"
  pull: False
  restart: "{{ devops_docker_utils_restart | default('no') }}"
  stop_remove: "{{ devops_docker_utils_stop_remove | default('no') }}"

  consul:
    tag: "{{ devops_docker_utils_consul_tag | default('latest') }}"
    restart: "{{ devops_docker_utils_consul_restart | default('unless-stopped') }}"

  registrator:
    tag: latest
    command: "{{ devops_docker_utils_registrator_command | default('consul://localhost:8500') }}"
    restart: unless-stopped
    net: host

  logspout:
    tag: master
    ports: "8000:80"
    restart: unless-stopped
    command: "{{ devops_docker_utils_logspout_command | default('syslog://') }}"

  service_discovery:
    tag: latest
    restart: unless-stopped
