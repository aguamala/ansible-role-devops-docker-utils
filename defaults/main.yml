---
# defaults file for ansible-role-devops-docker-utils

#main
#devops_docker_utils_user: centos
#devops_docker_utils_compose_dir: devops_docker_utils

#consul
devops_docker_utils_consul_server_mode: False
devops_docker_utils_consul_bootstrap: False
devops_docker_utils_consul_args: "-node 'consul-node-{{ hostname }}' -dc 'virginia' -join '172.20.0.171' -log-level 'INFO'"

#registrator
#devops_docker_utils_registrator_command: consul://localhost:8500

#service-discovery
devops_docker_utils_service_discovery:
  templates:
    - name: haproxy_leastconn_backend
      dest: "haproxy_leastconn_backend_apache"
      conf_name: haproxy_leastconn_backend
      conf_dest: haproxy_leastconn_backend_apache
      port: 80
      service: "apache"
      command: "haproxy-restart"
    - name: haproxy_leastconn_backend
      dest: "haproxy_leastconn_backend_apache2"
      conf_name: haproxy_leastconn_backend
      conf_dest: haproxy_leastconn_backend_apache2
      port: 81
      service: "apache"
      command: "haproxy-restart"


devops_docker_utils:
  user: "{{ devops_docker_utils_user | default('centos') }}"
  compose_dir: "/home/{{ devops_docker_utils_user | default('centos') }}/{{ devops_docker_utils_compose_dir | default('devops_docker_utils') }}"
  pull: False

  consul:
    tag: "{{ devops_docker_utils_consul_tag | default('latest') }}"
    restart: "{{ devops_docker_utils_consul_restart | default('always') }}"

  registrator:
    tag: latest
    #command: -ip {{ ansible_default_ipv4.address }} consul://consul:8500
    command: "{{ devops_docker_utils_registrator_command | default('consul://localhost:8500') }}"
    restart: always
    net: host

  logspout:
    tag: master
    ports: "8000:8000"
    restart: always
    command: "{{ devops_docker_utils_logspout_command | default('syslog://') }}"

  service_discovery:
    tag: latest
    restart: always


docker_engine_install:
  #install docker from docker repo
  repos_install:
      docker: True
  pkg_mgr:
    install:
      - name: docker-engine
        repo: dockerrepo

  started: True
  enabled: True
  sysconfig:
    options: --selinux-enabled
    docker_cert_path: /etc/docker
    #OPTIONAL
    #add_registry:
    #block_registry
    #insecure_registry
    #docker_tmpdir
    #logrotate
    #docker_network_options
